FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-python:3.9-run

# Set our working directory
WORKDIR /usr/src/app

# Copy requirements.txt first for better cache on later pushes
COPY requirements.txt requirements.txt

# pip install python deps from requirements.txt on the resin.io build server
RUN pip3 install -r requirements.txt

# This will copy all files in our root to the working  directory in the container
COPY . ./

# Environmental variables are stated here for use when developing in 'local' mode.
# In production the variables below will not be used but can be set with the Balena
# dashboard. If these variables are not available the values used below will be set by
# default in the application code.
ARG WOW_ENABLE
ARG WOW_TX_INTERVAL
ARG WOW_URL
ARG SOFTWARETYPE
ARG WOW_SITE_ID
ARG WOW_AUTH_KEY
ARG SITE_ALTITUDE
ARG BARO_HT

ARG CORLYSIS_ENABLE
ARG CORLYSIS_TX_INTERVAL
ARG CORLYSIS_DB
ARG CORLYSIS_URL
ARG CORLYSIS_AUTH
ARG CORLYSIS_TOKEN

ARG AWS_ENDPOINT
ARG AWS_PRIVATE_CERT
ARG AWS_ROOT_CERT
ARG AWS_THING_CERT
ARG AWS_IOT_ENABLE
ARG AWS_TX_INTERVAL

ENV AWS_ENDPOINT=${AWS_ENDPOINT}
ENV AWS_PRIVATE_CERT=${AWS_PRIVATE_CERT}
ENV AWS_ROOT_CERT=${AWS_ROOT_CERT}
ENV AWS_THING_CERT=${AWS_THING_CERT}
ENV AWS_IOT_ENABLE=${AWS_IOT_ENABLE}
ENV AWS_TX_INTERVAL=${AWS_TX_INTERVAL}

ENV WOW_ENABLE=${WOW_ENABLE}
ENV WOW_URL=${WOW_URL}
ENV SOFTWARETYPE=${SOFTWARETYPE}
ENV WOW_SITE_ID=${WOW_SITE_ID}
ENV WOW_AUTH_KEY=${WOW_AUTH_KEY}
ENV WOW_TX_INTERVAL=${WOW_TX_INTERVAL}
ENV SITE_ALTITUDE=${SITE_ALTITUDE}
ENV BARO_HT=${BARO_HT}

ENV CORLYSIS_ENABLE=${CORLYSIS_ENABLE}
ENV CORLYSIS_TX_INTERVAL=${CORLYSIS_TX_INTERVAL}
ENV COLYSIS_DB=${COLYSIS_DB}
ENV CORLYSIS_URL=${CORLYSIS_URL}
ENV CORLYSIS_AUTH=${CORLYSIS_AUTH}
ENV CORLYSIS_TOKEN=${CORLYSIS_TOKEN}

# script to run when container starts up on the device
CMD ["python3","-u","subscriber.py"]
